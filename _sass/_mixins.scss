// See skeleton file for copyright info

// @import "dependencies"; // don't remove me
// @import "functions";	// your custom functions

// ---------- ADD CUSTOM MIXINS BELOW HERE
// @mixin myMixin() { }

// grid ( [ number $width: 960px, [ bool $fluid: false, [  number $gutterWidth: 20px, [ number $colCount: 16 ] ] ] ] )
@mixin grid($width: $baseWidth, $fluid: $isFluid, $gutterWidth: $baseGutterWidth, $colCount: $baseColCount) {
	@if ( $fluid == true ) {
		@include _fluidGrid($colCount);
	} @else {
		// we no longer need to set a value for $colWdith because it is generated dynamically right here!
		// @see https://github.com/atomicpages/skeleton-sass/issues/7
		$colWidth: ($width / $colCount) - $gutterWidth;
		@include _fixedGrid($width, $colWidth, $gutterWidth, $colCount);
	}
}

// mobileGrid ( [ number $width: 960px, [ number $colCount: 16 ]  ] )
@mixin mobileGrid($width: $baseWidth, $colCount: $baseColCount) {
	@include _mobileGrid($width, $colCount);
}

// Transitions
@mixin transition($property...) {
		-webkit-transition:$property .3s ease-in-out;
		-moz-transition: $property .3s ease-in-out;
		-o-transition: $property .3s ease-in-out;
		transition: $property .3s ease-in-out;
}

// Image Zoom mixin
.img_zoom_in img {
  -webkit-transition:all .2s ease-in-out;
  -moz-transition:all .2s ease-in-out;
  -ms-transition:all .2s ease-in-out;
  -o-transition:all .2s ease-in-out;
  transition:all .2s ease-in-out;

  }

.img_zoom_in:hover img {
  -webkit-transform:scale(1.1);
  -moz-transform:scale(1.1);
  -ms-transform:scale(1.1);
  -o-transform:scale(1.1);
   transform:scale(1.1);
  }


// Triangle corners
@mixin triangle($pos, $size, $color){
  content: '';
  width: 0;
  height: 0;
  border:{
    width: $size;
    color: transparent;
    style: solid;
  }

    @if $pos == top-left {border-top-color: $color; border-left-color: $color;}
    @if $pos == top-right {border-top-color: $color; border-right-color: $color;}
  }

// 40px corner
.corner {
  background: none;
  padding: 0;
  display: block;
  width: 2.5rem;
  height: 2.5rem;
  position: absolute;
  right: 0;
  bottom: 0;
  float: right;
  cursor: pointer;
  border-bottom: 0 !important;
  @include transition;
  
  a {
    width: 100%;
    height: 100%;
  }

  }

.corner_right {
  @extend .corner;
  width: 100%;
  height: 100%;
}

.unfold {
  width: 100%;
  height: 100%;
  @include transition;
  }


[class*='triangle-'] {
  display: block;
}

